/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <iostream>

using namespace std;

class StackQueue{
    private:
        int *stack = new int[10];
        int top,top2;
        int *stack2 = new int[10];
    
    public:
        StackQueue(){
            top = -1;
            top2 = -1;
        }
    
        void push(int item)
        {
            top += 1;
            stack[top] = item;
        }
        
        void enqueue(int item){
            while(!isEmpty()){
                pushTwo(pop());
            }
            push(item);
            while(!isEmpty2()){
                push(popTwo());
            }
        }
        
        void dequeue(){
            cout << "Dequeued element is:" << pop();
            cout << endl << endl;
        }
        
        void pushTwo(int item)
        {
            top2 += 1;
            stack2[top2] = item;
        }
    
        int pop()
        {
            int popElem;
            if (isEmpty())
                return 0;
            else
            {   
                popElem = stack[top];
                top -= 1;
            }
            return popElem;
        }
        
        int popTwo()
        {
            int popElem;
            if (isEmpty2())
                return 0;
            else
            {   
                popElem = stack2[top2];
                top2 -= 1;
            }
            return popElem;
        }
        bool isEmpty()
        {
            if (top == -1)
                return true;
            else
                return false;
        }
        bool isEmpty2()
        {
            if (top2 == -1)
                return true;
            else
                return false;
        }
        
        void display(){
            for(int i = top;i >= 0; i--){
                cout << stack[i] << "\t";
            }
            cout << endl;
        }
};

int main()
{
    StackQueue s1;
    int item;
            
    
    cout<<"Second stack"<<endl;
    
    int ch;

    while (1)
    {
        cout << "1. Insert Element in queue\n";
        cout << "2. Delete element in queue\n";
        cout << "3. Display queue\n";
        cout << "\nEnter choice of operation:";
        cin >> ch;

        switch (ch)
        {
            case 1:
                cout << "Enter item to insert: ";
                cin >> item;
                s1.enqueue(item);
                break;
            case 2:
                s1.dequeue();
                break;
            case 3:
                s1.display();
                break;
        }
    }

    return 0;
}

